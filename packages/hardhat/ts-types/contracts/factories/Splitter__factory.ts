/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Splitter } from "../Splitter";

export class Splitter__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Splitter> {
    return super.deploy(overrides || {}) as Promise<Splitter>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Splitter {
    return super.attach(address) as Splitter;
  }
  connect(signer: Signer): Splitter__factory {
    return super.connect(signer) as Splitter__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Splitter {
    return new Contract(address, _abi, signerOrProvider) as Splitter;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "TransferETH",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "currentWindow",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fundsAvailable",
        type: "uint256",
      },
    ],
    name: "WindowIncremented",
    type: "event",
  },
  {
    inputs: [],
    name: "PERCENTAGE_SCALE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "window",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "scaledPercentageAllocation",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "percentageAllocation",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claimForAllWindows",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentWindow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "incrementWindow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "window",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "scaledPercent",
        type: "uint256",
      },
    ],
    name: "scaleAmountByPercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "scaledAmount",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b3f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80633f26479e1161005b5780633f26479e146100d95780638ffb5c97146100e3578063ba0bafb4146100f6578063d2ef0795146100ff57610088565b80631e7df9d31461008d5780632e7ba6ef146100a25780632eb4a7ab146100b5578063338b1d31146100d1575b600080fd5b6100a061009b366004610957565b610122565b005b6100a06100b03660046109fa565b610248565b6100be60005481565b6040519081526020015b60405180910390f35b6100a06103fb565b6100be620f424081565b6100be6100f1366004610a60565b6104f6565b6100be60015481565b61011261010d3660046109cf565b610521565b60405190151581526020016100c8565b61016a828280806020026020016040519081016040528093929190818152602001838360200280828437600092018290525054925061016591508890508761054c565b610594565b6101bb5760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642070726f6f660000000000000000000000000000000000000060448201526064015b60405180910390fd5b6000805b600154811015610235576101d38187610521565b610223576101e18187610651565b6102166004828154811061020557634e487b7160e01b600052603260045260246000fd5b9060005260206000200154866104f6565b6102209083610a81565b91505b8061022d81610ad8565b9150506101bf565b5061024085826106a2565b505050505050565b84600154116102995760405162461bcd60e51b815260206004820181905260248201527f63616e6e6f7420636c61696d20666f722061206675747572652077696e646f7760448201526064016101b2565b6102a38585610521565b156103165760405162461bcd60e51b815260206004820152602860248201527f4163636f756e7420616c726561647920636c61696d656420746865206769766560448201527f6e2077696e646f7700000000000000000000000000000000000000000000000060648201526084016101b2565b6103208585610651565b610363828280806020026020016040519081016040528093929190818152602001838360200280828437600092018290525054925061016591508890508761054c565b6103af5760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642070726f6f660000000000000000000000000000000000000060448201526064016101b2565b60006103e6600487815481106103d557634e487b7160e01b600052603260045260246000fd5b9060005260206000200154856104f6565b90506103f285826106a2565b50505050505050565b60006001546000141561040f57504761041a565b506006805460009091555b6000811161046a5760405162461bcd60e51b815260206004820152601e60248201527f4e6f206164646974696f6e616c2066756e647320666f722077696e646f77000060448201526064016101b2565b600480546001818101835560009283527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9091018390558054909182916104b2908390610a81565b909155505060015460408051918252602082018390527ff0840b82b46c1dc7df62cae652baa1b5588ce37b6a1236ed1dcf4caf34d738ac910160405180910390a150565b6000610506620f42406064610ab9565b6105108385610ab9565b61051a9190610a99565b9392505050565b6000600560006105318585610844565b815260208101919091526040016000205460ff169392505050565b6040516bffffffffffffffffffffffff19606084901b166020820152603481018290526000906054015b60405160208183030381529060405280519060200120905092915050565b600081815b85518110156106465760008682815181106105c457634e487b7160e01b600052603260045260246000fd5b60200260200101519050808311610606576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250610633565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b508061063e81610ad8565b915050610599565b509092149392505050565b6001600560006106618585610844565b8152602081019190915260400160002080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169115159190911790555050565b60006106ae8383610874565b9050806107e757600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561071f57600080fd5b505af1158015610733573d6000803e3d6000fd5b50506002546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff888116600483015260248201889052909116935063a9059cbb92506044019050602060405180830381600087803b1580156107ad57600080fd5b505af11580156107c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e591906109af565b505b6040805173ffffffffffffffffffffffffffffffffffffffff85168152602081018490528215158183015290517fdbd5389f52533f4cbd998e752125a5a4eaa0b813b399ad15f775ec0e8438620d9181900360600190a192915050565b6000828260405160200161057692919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b6000808373ffffffffffffffffffffffffffffffffffffffff168361753090604051600060405180830381858888f193505050503d80600081146108d4576040519150601f19603f3d011682016040523d82523d6000602084013e6108d9565b606091505b509095945050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461090857600080fd5b919050565b60008083601f84011261091e578182fd5b50813567ffffffffffffffff811115610935578182fd5b6020830191508360208260051b850101111561095057600080fd5b9250929050565b6000806000806060858703121561096c578384fd5b610975856108e4565b935060208501359250604085013567ffffffffffffffff811115610997578283fd5b6109a38782880161090d565b95989497509550505050565b6000602082840312156109c0578081fd5b8151801515811461051a578182fd5b600080604083850312156109e1578182fd5b823591506109f1602084016108e4565b90509250929050565b600080600080600060808688031215610a11578081fd5b85359450610a21602087016108e4565b935060408601359250606086013567ffffffffffffffff811115610a43578182fd5b610a4f8882890161090d565b969995985093965092949392505050565b60008060408385031215610a72578182fd5b50508035926020909101359150565b60008219821115610a9457610a94610af3565b500190565b600082610ab457634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610ad357610ad3610af3565b500290565b6000600019821415610aec57610aec610af3565b5060010190565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220cc85ae3bab1561e88da33bc4e8042734d0d5264e7dec29381c8648eeddaa67ab64736f6c63430008030033";
