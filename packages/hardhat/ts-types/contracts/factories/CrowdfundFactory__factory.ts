/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CrowdfundFactory,
  CrowdfundFactoryInterface,
} from "../CrowdfundFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "logic_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "crowdfundProxy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "fundingParams",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address payable[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "CrowdfundDeployed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "addresses",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable[]",
        name: "addresses_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "fundingParams_",
        type: "uint256[]",
      },
      {
        internalType: "bytes32",
        name: "poolId_",
        type: "bytes32",
      },
    ],
    name: "createCrowdfund",
    outputs: [
      {
        internalType: "address",
        name: "crowdfundProxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "fundingParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAddresses",
    outputs: [
      {
        internalType: "address payable[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFundingParams",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "logic",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161100738038061100783398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c610f7761009060003960006101330152610f776000f3fe60806040523480156200001157600080fd5b5060043610620000935760003560e01c8063a39fac121162000062578063a39fac121462000114578063d7dfa0dd146200012d578063d98f76b31462000155578063edf26d9b146200016c57600080fd5b8063318c18a2146200009857806338fff2d014620000ba5780633e0dc34e14620000cd5780635fc98c2a14620000d7575b600080fd5b620000a262000183565b604051620000b19190620007ad565b60405180910390f35b6002545b604051908152602001620000b1565b620000be60025481565b620000ee620000e836600462000608565b620001dd565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001620000b1565b6200011e62000390565b604051620000b1919062000751565b620000ee7f000000000000000000000000000000000000000000000000000000000000000081565b620000be6200016636600462000680565b62000400565b620000ee6200017d36600462000680565b62000422565b60606001805480602002602001604051908101604052809291908181526020018280548015620001d357602002820191906000526020600020905b815481526020019060010190808311620001be575b5050505050905090565b6000620001ec8187876200045a565b50620001fb60018585620004e7565b50600282905585856000816200022157634e487b7160e01b600052603260045260246000fd5b9050602002016020810190620002389190620005e4565b868660018181106200025a57634e487b7160e01b600052603260045260246000fd5b9050602002016020810190620002719190620005e4565b878760028181106200029357634e487b7160e01b600052603260045260246000fd5b9050602002016020810190620002aa9190620005e4565b6040805173ffffffffffffffffffffffffffffffffffffffff948516602082015292841690830152909116606082015260800160405160208183030381529060405280519060200120604051620003019062000525565b8190604051809103906000f590508015801562000322573d6000803e3d6000fd5b5090506200033260008062000533565b620003406001600062000533565b6002600090557f9677274ede69aff625ca23c3ef785645dae34f5809946712589a1e116a1b2a1d81858589896040516200037f95949392919062000699565b60405180910390a195945050505050565b60606000805480602002602001604051908101604052809291908181526020018280548015620001d357602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311620003cb575050505050905090565b600181815481106200041157600080fd5b600091825260209091200154905081565b600081815481106200043357600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b828054828255906000526020600020908101928215620004d5579160200282015b82811115620004d55781547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8435161782556020909201916001909101906200047b565b50620004e392915062000556565b5090565b828054828255906000526020600020908101928215620004d5579160200282015b82811115620004d557823582559160200191906001019062000508565b61075a80620007e883390190565b508054600082559060005260206000209081019062000553919062000556565b50565b5b80821115620004e3576000815560010162000557565b803573ffffffffffffffffffffffffffffffffffffffff811681146200059257600080fd5b919050565b60008083601f840112620005a9578182fd5b50813567ffffffffffffffff811115620005c1578182fd5b6020830191508360208260051b8501011115620005dd57600080fd5b9250929050565b600060208284031215620005f6578081fd5b62000601826200056d565b9392505050565b60008060008060006060868803121562000620578081fd5b853567ffffffffffffffff8082111562000638578283fd5b6200064689838a0162000597565b909750955060208801359150808211156200065f578283fd5b506200066e8882890162000597565b96999598509660400135949350505050565b60006020828403121562000692578081fd5b5035919050565b600073ffffffffffffffffffffffffffffffffffffffff808816835260206060818501528660608501527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff871115620006f0578283fd5b8660051b8089608087013784018481036080908101604087015281018690528690849060a0015b878210156200074257846200072c846200056d565b1681529183019160019190910190830162000717565b9b9a5050505050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015620007a157835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016200076d565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015620007a157835183529284019291840191600101620007c956fe608060405234801561001057600080fd5b50336001600160a01b031663d7dfa0dd6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561004c57600080fd5b505af1158015610060573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061008491906102f6565b600560006101000a8154816001600160a01b0302191690836001600160a01b03160217905550336001600160a01b031663a39fac126040518163ffffffff1660e01b815260040160006040518083038186803b1580156100e357600080fd5b505afa1580156100f7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261011f9190810190610319565b805161013391600091602090910190610241565b50336001600160a01b031663318c18a26040518163ffffffff1660e01b815260040160006040518083038186803b15801561016d57600080fd5b505afa158015610181573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101a991908101906103b9565b80516101bd916001916020909101906102a6565b50336001600160a01b03166338fff2d06040518163ffffffff1660e01b815260040160206040518083038186803b1580156101f757600080fd5b505afa15801561020b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022f919061043f565b6002556003805460ff191690556104d8565b828054828255906000526020600020908101928215610296579160200282015b8281111561029657825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610261565b506102a29291506102e1565b5090565b828054828255906000526020600020908101928215610296579160200282015b828111156102965782518255916020019190600101906102c6565b5b808211156102a257600081556001016102e2565b600060208284031215610307578081fd5b8151610312816104c0565b9392505050565b6000602080838503121561032b578182fd5b82516001600160401b03811115610340578283fd5b8301601f81018513610350578283fd5b805161036361035e82610487565b610457565b80828252848201915084840188868560051b8701011115610382578687fd5b8694505b838510156103ad578051610399816104c0565b835260019490940193918501918501610386565b50979650505050505050565b600060208083850312156103cb578182fd5b82516001600160401b038111156103e0578283fd5b8301601f810185136103f0578283fd5b80516103fe61035e82610487565b80828252848201915084840188868560051b870101111561041d578687fd5b8694505b838510156103ad578051835260019490940193918501918501610421565b600060208284031215610450578081fd5b5051919050565b604051601f8201601f191681016001600160401b038111828210171561047f5761047f6104aa565b604052919050565b60006001600160401b038211156104a0576104a06104aa565b5060051b60200190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146104d557600080fd5b50565b610273806104e76000396000f3fe60806040526004361061005e5760003560e01c8063d7dfa0dd11610043578063d7dfa0dd146100fa578063d98f76b31461014c578063edf26d9b1461016c57610065565b8063200d2ed2146100a65780633e0dc34e146100d657610065565b3661006557005b60055460405173ffffffffffffffffffffffffffffffffffffffff9091169036600082376000803683855af43d806000843e8180156100a2578184f35b8184fd5b3480156100b257600080fd5b506003546100c09060ff1681565b6040516100cd91906101fc565b60405180910390f35b3480156100e257600080fd5b506100ec60025481565b6040519081526020016100cd565b34801561010657600080fd5b506005546101279073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100cd565b34801561015857600080fd5b506100ec6101673660046101e4565b61018c565b34801561017857600080fd5b506101276101873660046101e4565b6101ad565b6001818154811061019c57600080fd5b600091825260209091200154905081565b600081815481106101bd57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b6000602082840312156101f5578081fd5b5035919050565b6020810160048310610237577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9190529056fea2646970667358221220bf90c9378f328cc0855ee90f5e5e1b1c6b05d579b6addf05a819f732ffeb8dd164736f6c63430008040033a26469706673582212204dfaaeade771ea4531f966143c610ac16d0eb2b55f740150e3a49937442d019c64736f6c63430008040033";

export class CrowdfundFactory__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    logic_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CrowdfundFactory> {
    return super.deploy(logic_, overrides || {}) as Promise<CrowdfundFactory>;
  }
  getDeployTransaction(
    logic_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(logic_, overrides || {});
  }
  attach(address: string): CrowdfundFactory {
    return super.attach(address) as CrowdfundFactory;
  }
  connect(signer: Signer): CrowdfundFactory__factory {
    return super.connect(signer) as CrowdfundFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrowdfundFactoryInterface {
    return new utils.Interface(_abi) as CrowdfundFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrowdfundFactory {
    return new Contract(address, _abi, signerOrProvider) as CrowdfundFactory;
  }
}
