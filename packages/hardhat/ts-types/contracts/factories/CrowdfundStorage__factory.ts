/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CrowdfundStorage,
  CrowdfundStorageInterface,
} from "../CrowdfundStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "addresses",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "fundingParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "logic",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum CrowdfundStorage.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101f8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063d7dfa0dd11610050578063d7dfa0dd146100a6578063d98f76b3146100eb578063edf26d9b146100fe57600080fd5b8063200d2ed21461006c5780633e0dc34e1461008f575b600080fd5b6003546100799060ff1681565b6040516100869190610181565b60405180910390f35b61009860025481565b604051908152602001610086565b6005546100c69073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610086565b6100986100f9366004610169565b610111565b6100c661010c366004610169565b610132565b6001818154811061012157600080fd5b600091825260209091200154905081565b6000818154811061014257600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b60006020828403121561017a578081fd5b5035919050565b60208101600483106101bc577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9190529056fea2646970667358221220f73dc068e03dde67a1e4783f1628e1ef74c236726951969409273d02331c44c064736f6c63430008040033";

export class CrowdfundStorage__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CrowdfundStorage> {
    return super.deploy(overrides || {}) as Promise<CrowdfundStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CrowdfundStorage {
    return super.attach(address) as CrowdfundStorage;
  }
  connect(signer: Signer): CrowdfundStorage__factory {
    return super.connect(signer) as CrowdfundStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrowdfundStorageInterface {
    return new utils.Interface(_abi) as CrowdfundStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrowdfundStorage {
    return new Contract(address, _abi, signerOrProvider) as CrowdfundStorage;
  }
}
