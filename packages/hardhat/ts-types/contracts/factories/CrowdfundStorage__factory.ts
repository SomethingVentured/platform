/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CrowdfundStorage,
  CrowdfundStorageInterface,
} from "../CrowdfundStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "addresses",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "fundingParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "logic",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "naming",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum CrowdfundStorage.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610394806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063d7dfa0dd11610050578063d7dfa0dd146100d1578063d98f76b314610116578063edf26d9b1461012957600080fd5b8063200d2ed2146100775780633966cca31461009a5780633e0dc34e146100ba575b600080fd5b6004546100849060ff1681565b6040516100919190610258565b60405180910390f35b6100ad6100a8366004610240565b61013c565b6040516100919190610299565b6100c360035481565b604051908152602001610091565b6008546100f19073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610091565b6100c3610124366004610240565b6101e8565b6100f1610137366004610240565b610209565b6002818154811061014c57600080fd5b9060005260206000200160009150905080546101679061030a565b80601f01602080910402602001604051908101604052809291908181526020018280546101939061030a565b80156101e05780601f106101b5576101008083540402835291602001916101e0565b820191906000526020600020905b8154815290600101906020018083116101c357829003601f168201915b505050505081565b600181815481106101f857600080fd5b600091825260209091200154905081565b6000818154811061021957600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b600060208284031215610251578081fd5b5035919050565b6020810160048310610293577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b6000602080835283518082850152825b818110156102c5578581018301518582016040015282016102a9565b818111156102d65783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600181811c9082168061031e57607f821691505b60208210811415610358577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea2646970667358221220ae39fc320d6230751c13a54b91068b9b351c954bf33edb9f61defaa09e69fca464736f6c63430008040033";

export class CrowdfundStorage__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CrowdfundStorage> {
    return super.deploy(overrides || {}) as Promise<CrowdfundStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CrowdfundStorage {
    return super.attach(address) as CrowdfundStorage;
  }
  connect(signer: Signer): CrowdfundStorage__factory {
    return super.connect(signer) as CrowdfundStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrowdfundStorageInterface {
    return new utils.Interface(_abi) as CrowdfundStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrowdfundStorage {
    return new Contract(address, _abi, signerOrProvider) as CrowdfundStorage;
  }
}
