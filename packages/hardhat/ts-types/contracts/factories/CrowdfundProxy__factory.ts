/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CrowdfundProxy,
  CrowdfundProxyInterface,
} from "../CrowdfundProxy";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "addresses",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "fundingParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "logic",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum CrowdfundStorage.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336001600160a01b031663d7dfa0dd6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561004c57600080fd5b505af1158015610060573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061008491906102f6565b600560006101000a8154816001600160a01b0302191690836001600160a01b03160217905550336001600160a01b031663a39fac126040518163ffffffff1660e01b815260040160006040518083038186803b1580156100e357600080fd5b505afa1580156100f7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261011f9190810190610319565b805161013391600091602090910190610241565b50336001600160a01b031663318c18a26040518163ffffffff1660e01b815260040160006040518083038186803b15801561016d57600080fd5b505afa158015610181573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101a991908101906103b9565b80516101bd916001916020909101906102a6565b50336001600160a01b03166338fff2d06040518163ffffffff1660e01b815260040160206040518083038186803b1580156101f757600080fd5b505afa15801561020b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022f919061043f565b6002556003805460ff191690556104d8565b828054828255906000526020600020908101928215610296579160200282015b8281111561029657825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610261565b506102a29291506102e1565b5090565b828054828255906000526020600020908101928215610296579160200282015b828111156102965782518255916020019190600101906102c6565b5b808211156102a257600081556001016102e2565b600060208284031215610307578081fd5b8151610312816104c0565b9392505050565b6000602080838503121561032b578182fd5b82516001600160401b03811115610340578283fd5b8301601f81018513610350578283fd5b805161036361035e82610487565b610457565b80828252848201915084840188868560051b8701011115610382578687fd5b8694505b838510156103ad578051610399816104c0565b835260019490940193918501918501610386565b50979650505050505050565b600060208083850312156103cb578182fd5b82516001600160401b038111156103e0578283fd5b8301601f810185136103f0578283fd5b80516103fe61035e82610487565b80828252848201915084840188868560051b870101111561041d578687fd5b8694505b838510156103ad578051835260019490940193918501918501610421565b600060208284031215610450578081fd5b5051919050565b604051601f8201601f191681016001600160401b038111828210171561047f5761047f6104aa565b604052919050565b60006001600160401b038211156104a0576104a06104aa565b5060051b60200190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146104d557600080fd5b50565b610273806104e76000396000f3fe60806040526004361061005e5760003560e01c8063d7dfa0dd11610043578063d7dfa0dd146100fa578063d98f76b31461014c578063edf26d9b1461016c57610065565b8063200d2ed2146100a65780633e0dc34e146100d657610065565b3661006557005b60055460405173ffffffffffffffffffffffffffffffffffffffff9091169036600082376000803683855af43d806000843e8180156100a2578184f35b8184fd5b3480156100b257600080fd5b506003546100c09060ff1681565b6040516100cd91906101fc565b60405180910390f35b3480156100e257600080fd5b506100ec60025481565b6040519081526020016100cd565b34801561010657600080fd5b506005546101279073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100cd565b34801561015857600080fd5b506100ec6101673660046101e4565b61018c565b34801561017857600080fd5b506101276101873660046101e4565b6101ad565b6001818154811061019c57600080fd5b600091825260209091200154905081565b600081815481106101bd57600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b6000602082840312156101f5578081fd5b5035919050565b6020810160048310610237577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9190529056fea2646970667358221220bf90c9378f328cc0855ee90f5e5e1b1c6b05d579b6addf05a819f732ffeb8dd164736f6c63430008040033";

export class CrowdfundProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CrowdfundProxy> {
    return super.deploy(overrides || {}) as Promise<CrowdfundProxy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CrowdfundProxy {
    return super.attach(address) as CrowdfundProxy;
  }
  connect(signer: Signer): CrowdfundProxy__factory {
    return super.connect(signer) as CrowdfundProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrowdfundProxyInterface {
    return new utils.Interface(_abi) as CrowdfundProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrowdfundProxy {
    return new Contract(address, _abi, signerOrProvider) as CrowdfundProxy;
  }
}
