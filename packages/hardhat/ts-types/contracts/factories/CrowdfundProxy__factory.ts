/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CrowdfundProxy,
  CrowdfundProxyInterface,
} from "../CrowdfundProxy";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "addresses",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "fundingParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "logic",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "naming",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum CrowdfundStorage.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50336001600160a01b031663d7dfa0dd6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200004e57600080fd5b505af115801562000063573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000899190620004e7565b600860006101000a8154816001600160a01b0302191690836001600160a01b03160217905550336001600160a01b031663a39fac126040518163ffffffff1660e01b815260040160006040518083038186803b158015620000e957600080fd5b505afa158015620000fe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200012891908101906200050d565b80516200013e91600091602090910190620002e9565b50336001600160a01b031663318c18a26040518163ffffffff1660e01b815260040160006040518083038186803b1580156200017957600080fd5b505afa1580156200018e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620001b89190810190620006eb565b8051620001ce9160019160209091019062000353565b50336001600160a01b031663b1af96ef6040518163ffffffff1660e01b815260040160006040518083038186803b1580156200020957600080fd5b505afa1580156200021e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620002489190810190620005b9565b80516200025e9160029160209091019062000391565b50336001600160a01b0316633e0dc34e6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200029b57600080fd5b505af1158015620002b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002d691906200077a565b6003556004805460ff1916905562000855565b82805482825590600052602060002090810192821562000341579160200282015b828111156200034157825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906200030a565b506200034f929150620003f1565b5090565b82805482825590600052602060002090810192821562000341579160200282015b828111156200034157825182559160200191906001019062000374565b828054828255906000526020600020908101928215620003e3579160200282015b82811115620003e35782518051620003d291849160209091019062000408565b5091602001919060010190620003b2565b506200034f92915062000484565b5b808211156200034f5760008155600101620003f2565b8280546200041690620007ec565b90600052602060002090601f0160209004810192826200043a576000855562000341565b82601f106200045557805160ff191683800117855562000341565b828001600101855582156200034157918201828111156200034157825182559160200191906001019062000374565b808211156200034f5760006200049b8282620004a5565b5060010162000484565b508054620004b390620007ec565b6000825580601f10620004c4575050565b601f016020900490600052602060002090810190620004e49190620003f1565b50565b600060208284031215620004f9578081fd5b815162000506816200083f565b9392505050565b6000602080838503121562000520578182fd5b82516001600160401b0381111562000536578283fd5b8301601f8101851362000547578283fd5b80516200055e6200055882620007c6565b62000793565b80828252848201915084840188868560051b87010111156200057e578687fd5b8694505b83851015620005ad57805162000598816200083f565b83526001949094019391850191850162000582565b50979650505050505050565b60006020808385031215620005cc578182fd5b82516001600160401b0380821115620005e3578384fd5b8185019150601f8681840112620005f8578485fd5b8251620006096200055882620007c6565b8082825286820191508686018a888560051b890101111562000629578889fd5b885b84811015620006db5781518781111562000643578a8bfd5b8801603f81018d1362000654578a8bfd5b89810151888111156200066b576200066b62000829565b6200067e818901601f19168c0162000793565b81815260408f8184860101111562000694578d8efd5b8d5b83811015620006b3578481018201518382018f01528d0162000696565b83811115620006c4578e8e85850101525b50508652505092880192908801906001016200062b565b50909a9950505050505050505050565b60006020808385031215620006fe578182fd5b82516001600160401b0381111562000714578283fd5b8301601f8101851362000725578283fd5b8051620007366200055882620007c6565b80828252848201915084840188868560051b870101111562000756578687fd5b8694505b83851015620005ad5780518352600194909401939185019185016200075a565b6000602082840312156200078c578081fd5b5051919050565b604051601f8201601f191681016001600160401b0381118282101715620007be57620007be62000829565b604052919050565b60006001600160401b03821115620007e257620007e262000829565b5060051b60200190565b600181811c908216806200080157607f821691505b602082108114156200082357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114620004e457600080fd5b61041c80620008656000396000f3fe6080604052600436106100695760003560e01c8063d7dfa0dd11610043578063d7dfa0dd14610132578063d98f76b314610184578063edf26d9b146101a457610070565b8063200d2ed2146100b15780633966cca3146100e15780633e0dc34e1461010e57610070565b3661007057005b60085460405173ffffffffffffffffffffffffffffffffffffffff9091169036600082376000803683855af43d806000843e8180156100ad578184f35b8184fd5b3480156100bd57600080fd5b506004546100cb9060ff1681565b6040516100d891906102e0565b60405180910390f35b3480156100ed57600080fd5b506101016100fc3660046102c8565b6101c4565b6040516100d89190610321565b34801561011a57600080fd5b5061012460035481565b6040519081526020016100d8565b34801561013e57600080fd5b5060085461015f9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100d8565b34801561019057600080fd5b5061012461019f3660046102c8565b610270565b3480156101b057600080fd5b5061015f6101bf3660046102c8565b610291565b600281815481106101d457600080fd5b9060005260206000200160009150905080546101ef90610392565b80601f016020809104026020016040519081016040528092919081815260200182805461021b90610392565b80156102685780601f1061023d57610100808354040283529160200191610268565b820191906000526020600020905b81548152906001019060200180831161024b57829003601f168201915b505050505081565b6001818154811061028057600080fd5b600091825260209091200154905081565b600081815481106102a157600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b6000602082840312156102d9578081fd5b5035919050565b602081016004831061031b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b91905290565b6000602080835283518082850152825b8181101561034d57858101830151858201604001528201610331565b8181111561035e5783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600181811c908216806103a657607f821691505b602082108114156103e0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea2646970667358221220d456860f69e572d078b7a1871cc8e5f4c3e303c8a480d9663e57503be25fef0364736f6c63430008040033";

export class CrowdfundProxy__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CrowdfundProxy> {
    return super.deploy(overrides || {}) as Promise<CrowdfundProxy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CrowdfundProxy {
    return super.attach(address) as CrowdfundProxy;
  }
  connect(signer: Signer): CrowdfundProxy__factory {
    return super.connect(signer) as CrowdfundProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrowdfundProxyInterface {
    return new utils.Interface(_abi) as CrowdfundProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrowdfundProxy {
    return new Contract(address, _abi, signerOrProvider) as CrowdfundProxy;
  }
}
