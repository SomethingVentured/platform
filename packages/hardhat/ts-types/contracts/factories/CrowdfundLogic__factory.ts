/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CrowdfundLogic,
  CrowdfundLogicInterface,
} from "../CrowdfundLogic";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BidAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Contribution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amountRaised",
        type: "uint256",
      },
    ],
    name: "FundingClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ReceivedERC721",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Redeemed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "addresses",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "closeFunding",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "backer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "contribute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "fundingParams",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "logic",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "redeemableFromTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "enum CrowdfundStorage.Status",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e41806100206000396000f3fe6080604052600436106100b15760003560e01c80638418cd9911610069578063d98f76b31161004e578063d98f76b31461019d578063db006a75146101bd578063edf26d9b146101dd57600080fd5b80638418cd991461016a578063d7dfa0dd1461017d57600080fd5b80632f87e4be1161009a5780632f87e4be1461010f57806331a3a5061461013d5780633e0dc34e1461015457600080fd5b806310fe9ae8146100b6578063200d2ed2146100e8575b600080fd5b3480156100c257600080fd5b506100cb6101fd565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100f457600080fd5b506003546101029060ff1681565b6040516100df9190610d7a565b34801561011b57600080fd5b5061012f61012a366004610d4a565b61023a565b6040519081526020016100df565b34801561014957600080fd5b5061015261031c565b005b34801561016057600080fd5b5061012f60025481565b610152610178366004610d14565b610603565b34801561018957600080fd5b506005546100cb906001600160a01b031681565b3480156101a957600080fd5b5061012f6101b8366004610d4a565b6108e4565b3480156101c957600080fd5b506101526101d8366004610d4a565b610905565b3480156101e957600080fd5b506100cb6101f8366004610d4a565b610bcc565b60008060028154811061022057634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316919050565b600080600060028154811061025f57634e487b7160e01b600052603260045260246000fd5b6000918252602080832090910154604080517f18160ddd00000000000000000000000000000000000000000000000000000000815290516001600160a01b03909216945084926318160ddd92600480840193829003018186803b1580156102c557600080fd5b505afa1580156102d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fd9190610d62565b90508061030a4786610dc2565b6103149190610da2565b949350505050565b6000808154811061033d57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0316331461035d57600080fd5b600260045414156103b55760405162461bcd60e51b815260206004820152600e60248201527f5265656e7472616e742063616c6c00000000000000000000000000000000000060448201526064015b60405180910390fd5b600260045560006003805460ff16908111156103e157634e487b7160e01b600052602160045260246000fd5b1461042e5760405162461bcd60e51b815260206004820152601f60248201527f43726f776466756e643a2046756e64696e67206d757374206265206f70656e0060448201526064016103ac565b42600160028154811061045157634e487b7160e01b600052603260045260246000fd5b9060005260206000200154116104cf5760405162461bcd60e51b815260206004820152602560248201527f43726f776466756e643a2054696d65206c696d697420686173206e6f7420657860448201527f706972656400000000000000000000000000000000000000000000000000000060648201526084016103ac565b600180815481106104f057634e487b7160e01b600052603260045260246000fd5b906000526020600020015447106105ee576003805460ff191660021790556040514781527f3d4e2838c2c18bf2acccc9e82df8a8b76b0ca4118a6faf7a387fd77dec6aba349060200160405180910390a16000808154811061056257634e487b7160e01b600052603260045260246000fd5b6000918252602082200154600180546001600160a01b03909216926108fc9260649291906105a057634e487b7160e01b600052603260045260246000fd5b9060005260206000200154476105b69190610dc2565b6105c09190610da2565b6040518115909202916000818181858888f193505050501580156105e8573d6000803e3d6000fd5b506105fc565b6003805460ff191660011790555b6001600455565b600260045414156106565760405162461bcd60e51b815260206004820152600e60248201527f5265656e7472616e742063616c6c00000000000000000000000000000000000060448201526064016103ac565b6002600481905550600160028154811061068057634e487b7160e01b600052603260045260246000fd5b906000526020600020015442106106ff5760405162461bcd60e51b815260206004820152602160248201527f43726f776466756e643a2046756e64696e6720706572696f64206973206f766560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084016103ac565b60006003805460ff169081111561072657634e487b7160e01b600052602160045260246000fd5b146107735760405162461bcd60e51b815260206004820152601f60248201527f43726f776466756e643a2046756e64696e67206d757374206265206f70656e0060448201526064016103ac565b3481146107e85760405162461bcd60e51b815260206004820152602360248201527f43726f776466756e643a20416d6f756e74206973206e6f742076616c7565207360448201527f656e74000000000000000000000000000000000000000000000000000000000060648201526084016103ac565b60008060028154811061080b57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546040517f40c10f190000000000000000000000000000000000000000000000000000000081526001600160a01b03858116600483015260248201859052909116915081906340c10f1990604401600060405180830381600087803b15801561087e57600080fd5b505af1158015610892573d6000803e3d6000fd5b5050604080516001600160a01b0387168152602081018690527f4d154d4aae216bed6d0926db77c00df2b57c6b5ba4eee05775de20facede3a7b93500190505b60405180910390a15050600160045550565b600181815481106108f457600080fd5b600091825260209091200154905081565b600260045414156109585760405162461bcd60e51b815260206004820152600e60248201527f5265656e7472616e742063616c6c00000000000000000000000000000000000060448201526064016103ac565b6002600481905550600160028154811061098257634e487b7160e01b600052603260045260246000fd5b9060005260206000200154421180156109c55750600180815481106109b757634e487b7160e01b600052603260045260246000fd5b906000526020600020015447105b610a5d5760405162461bcd60e51b815260206004820152604d60248201527f43726f776466756e643a2046756e64696e672068617320656974686572206e6f60448201527f7420636c6f736564206f72206861732073756363656564656420696e206d656560648201527f74696e672069747320676f616c00000000000000000000000000000000000000608482015260a4016103ac565b60004711610ad35760405162461bcd60e51b815260206004820152602560248201527f43726f776466756e643a204e6f2045544820617661696c61626c6520746f207260448201527f656465656d00000000000000000000000000000000000000000000000000000060648201526084016103ac565b6000610ade8261023a565b9050600080600281548110610b0357634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546040517f9dc29fac000000000000000000000000000000000000000000000000000000008152336004820152602481018590526001600160a01b0390911691508190639dc29fac90604401600060405180830381600087803b158015610b7457600080fd5b505af1158015610b88573d6000803e3d6000fd5b50505050610b963383610bf6565b60408051338152602081018490527f4896181ff8f4543cc00db9fe9b6fb7e6f032b7eb772c72ab1ec1b4d2e03b936991016108d2565b60008181548110610bdc57600080fd5b6000918252602090912001546001600160a01b0316905081565b80471015610c465760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016103ac565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610c93576040519150601f19603f3d011682016040523d82523d6000602084013e610c98565b606091505b5050905080610d0f5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016103ac565b505050565b60008060408385031215610d26578182fd5b82356001600160a01b0381168114610d3c578283fd5b946020939093013593505050565b600060208284031215610d5b578081fd5b5035919050565b600060208284031215610d73578081fd5b5051919050565b6020810160048310610d9c57634e487b7160e01b600052602160045260246000fd5b91905290565b600082610dbd57634e487b7160e01b81526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e0657634e487b7160e01b81526011600452602481fd5b50029056fea264697066735822122023f1e1b5d2ef40807f8e71e0894fa6cfe15e2d51799969e308b79d64f442ab8764736f6c63430008040033";

export class CrowdfundLogic__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CrowdfundLogic> {
    return super.deploy(overrides || {}) as Promise<CrowdfundLogic>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CrowdfundLogic {
    return super.attach(address) as CrowdfundLogic;
  }
  connect(signer: Signer): CrowdfundLogic__factory {
    return super.connect(signer) as CrowdfundLogic__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrowdfundLogicInterface {
    return new utils.Interface(_abi) as CrowdfundLogicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrowdfundLogic {
    return new Contract(address, _abi, signerOrProvider) as CrowdfundLogic;
  }
}
