/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExampleERC20Token,
  ExampleERC20TokenInterface,
} from "../ExampleERC20Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOperator",
        type: "address",
      },
    ],
    name: "makeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "valueToTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200122d3803806200122d8339810160408190526200003491620001da565b8151829082906200004d90600390602085019062000081565b5080516200006390600490602084019062000081565b5050600580546001600160a01b031916331790555062000294915050565b8280546200008f9062000241565b90600052602060002090601f016020900481019282620000b35760008555620000fe565b82601f10620000ce57805160ff1916838001178555620000fe565b82800160010185558215620000fe579182015b82811115620000fe578251825591602001919060010190620000e1565b506200010c92915062000110565b5090565b5b808211156200010c576000815560010162000111565b600082601f83011262000138578081fd5b81516001600160401b03808211156200015557620001556200027e565b604051601f8301601f19908116603f011681019082821181831017156200018057620001806200027e565b816040528381526020925086838588010111156200019c578485fd5b8491505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d057848385830101525b9695505050505050565b60008060408385031215620001ed578182fd5b82516001600160401b038082111562000204578384fd5b620002128683870162000127565b9350602085015191508082111562000228578283fd5b50620002378582860162000127565b9150509250929050565b600181811c908216806200025657607f821691505b602082108114156200027857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610f8980620002a46000396000f3fe6080604052600436106100e85760003560e01c806361429bea1161008a5780639dc29fac116100595780639dc29fac14610263578063a457c2d714610283578063a9059cbb146102a3578063dd62ed3e146102c357600080fd5b806361429bea146101d857806370a08231146101f857806395d89b411461022e5780639744b8dc1461024357600080fd5b806323b872dd116100c657806323b872dd14610167578063313ce5671461018757806339509351146101a357806340c10f19146101c357600080fd5b806306fdde03146100ed578063095ea7b31461011857806318160ddd14610148575b600080fd5b3480156100f957600080fd5b50610102610309565b60405161010f9190610df3565b60405180910390f35b34801561012457600080fd5b50610138610133366004610db2565b61039b565b604051901515815260200161010f565b34801561015457600080fd5b506002545b60405190815260200161010f565b34801561017357600080fd5b50610138610182366004610d77565b6103b1565b34801561019357600080fd5b506040516012815260200161010f565b3480156101af57600080fd5b506101386101be366004610db2565b610475565b6101d66101d1366004610db2565b6104b1565b005b3480156101e457600080fd5b506101d66101f3366004610d24565b610537565b34801561020457600080fd5b50610159610213366004610d24565b6001600160a01b031660009081526020819052604090205490565b34801561023a57600080fd5b506101026105db565b34801561024f57600080fd5b5061015961025e366004610ddb565b6105ea565b34801561026f57600080fd5b506101d661027e366004610db2565b6105fe565b34801561028f57600080fd5b5061013861029e366004610db2565b610676565b3480156102af57600080fd5b506101386102be366004610db2565b610727565b3480156102cf57600080fd5b506101596102de366004610d45565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461031890610ed0565b80601f016020809104026020016040519081016040528092919081815260200182805461034490610ed0565b80156103915780601f1061036657610100808354040283529160200191610391565b820191906000526020600020905b81548152906001019060200180831161037457829003601f168201915b5050505050905090565b60006103a8338484610734565b50600192915050565b60006103be84848461088c565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561045d5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b61046a8533858403610734565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103a89185906104ac908690610e64565b610734565b6005546001600160a01b0316331461051b5760405162461bcd60e51b815260206004820152602760248201527f4d6573736167652073656e646572206973206e6f7420617070726f766564206f6044820152663832b930ba37b960c91b6064820152608401610454565b6000610526826105ea565b90506105328382610aa4565b505050565b6005546001600160a01b031633146105a15760405162461bcd60e51b815260206004820152602760248201527f4d6573736167652073656e646572206973206e6f7420617070726f766564206f6044820152663832b930ba37b960c91b6064820152608401610454565b600580547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b60606004805461031890610ed0565b60006105f86103e883610e7c565b92915050565b6005546001600160a01b031633146106685760405162461bcd60e51b815260206004820152602760248201527f4d6573736167652073656e646572206973206e6f7420617070726f766564206f6044820152663832b930ba37b960c91b6064820152608401610454565b6106728282610b83565b5050565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156107105760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610454565b61071d3385858403610734565b5060019392505050565b60006103a833848461088c565b6001600160a01b0383166107af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610454565b6001600160a01b03821661082b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610454565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166109085760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610454565b6001600160a01b0382166109845760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610454565b6001600160a01b03831660009081526020819052604090205481811015610a135760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610454565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610a4a908490610e64565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a9691815260200190565b60405180910390a350505050565b6001600160a01b038216610afa5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610454565b8060026000828254610b0c9190610e64565b90915550506001600160a01b03821660009081526020819052604081208054839290610b39908490610e64565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610bff5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610454565b6001600160a01b03821660009081526020819052604090205481811015610c8e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610454565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610cbd908490610eb9565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b80356001600160a01b0381168114610d1f57600080fd5b919050565b600060208284031215610d35578081fd5b610d3e82610d08565b9392505050565b60008060408385031215610d57578081fd5b610d6083610d08565b9150610d6e60208401610d08565b90509250929050565b600080600060608486031215610d8b578081fd5b610d9484610d08565b9250610da260208501610d08565b9150604084013590509250925092565b60008060408385031215610dc4578182fd5b610dcd83610d08565b946020939093013593505050565b600060208284031215610dec578081fd5b5035919050565b6000602080835283518082850152825b81811015610e1f57858101830151858201604001528201610e03565b81811115610e305783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60008219821115610e7757610e77610f24565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610eb457610eb4610f24565b500290565b600082821015610ecb57610ecb610f24565b500390565b600181811c90821680610ee457607f821691505b60208210811415610f1e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220d98842732581650e2940b29383c3e1cd325ccf46594d8009690cb9ccaf01884664736f6c63430008040033";

export class ExampleERC20Token__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExampleERC20Token> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<ExampleERC20Token>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): ExampleERC20Token {
    return super.attach(address) as ExampleERC20Token;
  }
  connect(signer: Signer): ExampleERC20Token__factory {
    return super.connect(signer) as ExampleERC20Token__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleERC20TokenInterface {
    return new utils.Interface(_abi) as ExampleERC20TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExampleERC20Token {
    return new Contract(address, _abi, signerOrProvider) as ExampleERC20Token;
  }
}
